---

- hosts: 127.0.0.1
  connection: local
  gather_facts: no

  tasks:
  - name: Create tmp path
    file:
      state: directory
      path: "{{ tmp_path }}"

  - name: List regions available without opt-in
    aws_region_info:
      filters:
        opt_in_status: 'opt-in-not-required'
    register: aws_regions

  # - name: Create buckets (async)
  #   s3_bucket:
  #     name: "{{ base_bucket_name }}-{{ item.region_name }}"
  #     state: present
  #     region: "{{ item.region_name }}"
  #     policy: "{{ lookup('template', 'bucket_policy.json') }}"
  #   async: 60
  #   poll: 0
  #   register: create_buckets_status
  #   vars:
  #     bucket_name: "{{ base_bucket_name }}-{{ item.region_name }}"
  #   loop: "{{ aws_regions.regions }}"

  # - name: Create buckets (wait)
  #   async_status:
  #     jid: "{{ item.ansible_job_id }}"
  #   register: jobs_create_buckets_status
  #   retries: 30
  #   delay: 1
  #   until: jobs_create_buckets_status.finished
  #   loop: "{{ create_buckets_status.results }}"

  - name: SAM build
    shell: "sam build --build-dir {{ tmp_path }}/build"
    args:
      chdir: "../"

  - name: SAM package (async)
    shell: "sam package
            --template-file {{tmp_path}}/build/template.yaml
            --s3-bucket {{ base_bucket_name }}-{{ item.region_name }}
            --output-template-file {{ tmp_path }}/drift-detector-cf-{{ item.region_name }}.yaml
            --force-upload
            --region {{ item.region_name }}"
    async: 60
    poll: 0
    register: sam_package_status
    args:
      chdir: "../"
    loop: "{{ aws_regions.regions }}"

  - name: SAM package (wait)
    async_status:
      jid: "{{ item.ansible_job_id }}"
    register: jobs_sam_package_status
    retries: 30
    delay: 1
    until: jobs_sam_package_status.finished
    loop: "{{ sam_package_status.results }}"

  - name: Upload templates to buckets (async)
    aws_s3:
      bucket: "{{ bucket_name }}"
      mode: put
      src: "{{ tmp_path }}/drift-detector-cf-{{ item.region_name }}.yaml"
      object: 'drift-detector-cf.yaml'
    async: 60
    poll: 0
    register: upload_template_status
    vars:
      bucket_name: "{{ base_bucket_name }}-{{ item.region_name }}"
    loop: "{{ aws_regions.regions }}"

  - name: Upload templates to buckets (wait)
    async_status:
      jid: "{{ item.ansible_job_id }}"
    register: jobs_upload_template_status
    retries: 30
    delay: 1
    until: jobs_upload_template_status.finished
    loop: "{{ upload_template_status.results }}"